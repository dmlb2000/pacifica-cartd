version: 0.1.{build}
pull_requests:
  do_not_increment_build_number: true

environment:
  MYSQL_HOST: localhost
  MYSQL_USER: root
  MYSQL_PASSWORD: Password12!
  MYSQL_PATH: C:\Program Files\MySQL\MySQL Server 5.7
  PGSQL_PATH: C:\Program Files\PostgreSQL\9.6
  MYSQL_ENV_MYSQL_USER: root
  MYSQL_ENV_MYSQL_PASSWORD: Password12!
  BROKER_URL: redis://127.0.0.1:6379/0
  BACKEND_URL: redis://127.0.0.1:6379/0

  matrix:
    - PYTHON: C:\Python27-x64

services:
  - mysql

before_test:
  - SET PATH=%MYSQL_PATH%\bin;%PATH%
  - mysqladmin --host=%MYSQL_HOST% --user=%MYSQL_USER% --password=%MYSQL_PASSWORD% create pacifica_cart
  - mkdir C:\tmp
  - ps: >
      Start-Process $env:PYTHON\python.exe -ArgumentList "$env:PYTHON\scripts\ArchiveInterfaceServer.py --config travis/config.cfg" -RedirectStandardError archive-error.log -RedirectStandardOutput archive-output.log;
      sleep 1;
      & "$env:PYTHON\python.exe" travis\archiveinterfacepreload.py;
      nuget install redis-64 -excludeversion;
      redis-64\tools\redis-server.exe --service-install;
      redis-64\tools\redis-server.exe --service-start;

install:
  - '%PYTHON%\python.exe -m pip install -r requirements-dev.txt'
  - '%PYTHON%\python.exe -m pip install celery[redis] eventlet'

build: off

test_script:
  - ps: >
      & "$env:PYTHON\python.exe" -m coverage run --include="cart/*" -m pytest -v cart\test;
      $env:ARCHIVEI_PORT_8080_TCP_ADDR = '127.0.0.1';
      $back_proc = Start-Process $env:PYTHON\python.exe -ArgumentList "-m coverage run --include='cart/*' -p -m celery -A cart worker -l info -P eventlet" -PassThru -RedirectStandardError celery-error.log -RedirectStandardOutput celery-output.log;
      $front_proc = Start-Process $env:PYTHON\python.exe -ArgumentList "-m coverage run --include='cart/*' -p -m cart --stop-after-a-moment" -PassThru -RedirectStandardError server-error.log -RedirectStandardOutput server-output.log;
      sleep 1;
      & "$env:PYTHON\python.exe" -m coverage run --include='cart/*' -a -m pytest cart/test/cart_end_to_end_tests.py -v;
      $test_rc = $?;
      if ( ! $test_rc ) {
              echo "================ Server Error ================";
              cat server-error.log;
              echo "================ Celery Error ================";
              cat celery-error.log;
              echo "================ Archive Error ================";
              cat archive-error.log;
              echo "================ Server Output ================";
              cat server-output.log;
              echo "================ Celery Output ================";
              cat celery-output.log;
              echo "================ Archive Output ================";
              cat archive-output.log;
              echo "================ End Logs ================";
              exit $test_rc;
      }
      echo 'Asking Celery to Shutdown';
      & "$env:PYTHON\python.exe" -m celery -A cart control shutdown;
      echo "Waiting for Server to Exit";
      $front_proc | Wait-Process;
      ls .coverage* | %{ & "$env:PYTHON\python.exe" -m coverage combine -a $_.name };
      & "$env:PYTHON\python.exe" -m coverage report -m --fail-under=100;
